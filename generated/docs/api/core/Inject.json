{
  "id": "api/core/Inject",
  "title": "\n      Inject\n    ",
  "contents": "\n\n<article>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          \n        ]\n      }\n      </script>\n    \n  </div>\n  <header class=\"api-header\">\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    <label class=\"api-type-label decorator\">decorator</label>\n    <h1 id=\"inject\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Inject#inject\"><i class=\"material-icons\">link</i></a>\n      Inject\n    </h1>\n    <span class=\"version\"></span>\n  </header>\n  <div class=\"page-actions\">\n      <a href=\"api/core/Inject#\"><label class=\"raised page-label\"><i class=\"material-icons\">mode_edit</i>suggest edits</label></a>\n      <a href=\"https://github.com/angular/angular/tree/6.0.0-beta.5/packages/core/src/di/metadata.ts#L66-L65\"><label class=\"raised page-label\"><i class=\"material-icons\">code</i>view source</label></a>\n  </div>\n\n  <div class=\"api-body\">\n    \n  \n<div class=\"what-it-does info-banner\">\n  <p translation-origin=\"off\">A parameter decorator that specifies a dependency.</p>\n\n</div>\n\n  \n  \n  \n<section class=\"decorator-overview\">\n<h2 id=\"metadata-overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Inject#metadata-overview\"><i class=\"material-icons\">link</i></a>Metadata Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\n@<a href=\"api/core/Inject\" class=\"code-anchor\">Inject</a>({ \n  <a class=\"code-anchor\" href=\"api/core/Inject#token\">token: any</a>\n})\n</code-example>\n</section>\n\n  \n<section class=\"how-to-use\">\n  <h2 id=\"how-to-use\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Inject#how-to-use\"><i class=\"material-icons\">link</i></a>How To Use</h2>\n  <code-example>\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Car {\n  constructor(@<a href=\"api/core/Inject\" class=\"code-anchor\">Inject</a>(\"MyEngine\") public engine:Engine) {}\n}\n</code-example>\n\n</section>\n\n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Inject#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p translation-origin=\"off\">For more details, see the <a href=\"guide/dependency-injection\">\"Dependency Injection Guide\"</a>.</p>\n<h3 translation-origin=\"off\" id=\"example\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Inject#example\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example>\nclass Engine {}\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Car {\n  constructor(@<a href=\"api/core/Inject\" class=\"code-anchor\">Inject</a>('MyEngine') public engine: Engine) {}\n}\n\nconst injector =\n    <a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a>.resolveAndCreate([{provide: 'MyEngine', useClass: Engine}, Car]);\n\nexpect(injector.get(Car).engine instanceof Engine).toBe(true);\n\n</code-example>\n<p translation-origin=\"off\">When <code>@<a href=\"api/core/Inject\" class=\"code-anchor\">Inject</a>()</code> is not present, <a href=\"api/core/Injector\"><code>Injector</code></a> will use the type annotation of the\nparameter.</p>\n<h3 translation-origin=\"off\" id=\"example-1\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Inject#example-1\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example>\nclass Engine {}\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nclass Car {\n  constructor(public engine: Engine) {\n  }  // same as constructor(@<a href=\"api/core/Inject\" class=\"code-anchor\">Inject</a>(Engine) engine:Engine)\n}\n\nconst injector = <a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a>.resolveAndCreate([Engine, Car]);\nexpect(injector.get(Car).engine instanceof Engine).toBe(true);\n\n</code-example>\n\n</section>\n\n  \n<section class=\"metadata-members\">\n  <h2 id=\"metadata-properties\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Inject#metadata-properties\"><i class=\"material-icons\">link</i></a>Metadata Properties</h2>\n  <table class=\"is-full-width list-table properties-table\">\n    <thead>\n      <tr><th>Property</th><th>Type</th><th>Description</th></tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"token\"></a>token</td>\n        <td><label class=\"property-type-label\"><code>any</code></label></td>\n        <td>\n          \n          \n        </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/ApplicationModule\n - api/core/InjectDecorator\n - api/core/forwardRef\n - api/core/testing/inject\n - api/forms/FormBuilder\n - api/upgrade/UpgradeAdapter\n - api/upgrade/static/UpgradeComponent\n - api/upgrade/static/UpgradeModule\n - api/upgrade/static/downgradeInjectable\n - guide/aot-compiler\n - guide/dependency-injection\n - guide/dependency-injection-in-action\n - guide/glossary\n - guide/http\n - guide/styleguide\n - guide/testing\n - guide/universal\n - guide/upgrade\n-->\n<!-- links from this doc:\n - api/core/Inject#\n - api/core/Inject#description\n - api/core/Inject#example\n - api/core/Inject#example-1\n - api/core/Inject#how-to-use\n - api/core/Inject#inject\n - api/core/Inject#metadata-overview\n - api/core/Inject#metadata-properties\n - api/core/Inject#token\n - api/core/Injectable\n - api/core/Injector\n - api/core/ReflectiveInjector\n - guide/dependency-injection\n - https://github.com/angular/angular/tree/6.0.0-beta.5/packages/core/src/di/metadata.ts#L66-L65\n-->"
}