{
  "id": "api/core/TemplateRef",
  "title": "\n      TemplateRef\n    ",
  "contents": "\n\n<article>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          \n            {\n            \"@type\": \"ListItem\",\n            \"position\": 1,\n            \"item\": {\n              \"@id\": \"https://angular.io//api\",\n              \"name\": \"API\"\n            }\n          }\n            ,{\n            \"@type\": \"ListItem\",\n            \"position\": 2,\n            \"item\": {\n              \"@id\": \"https://angular.io/api/core\",\n              \"name\": \"@angular/core\"\n            }\n          }\n            ,{\n            \"@type\": \"ListItem\",\n            \"position\": 3,\n            \"item\": {\n              \"@id\": \"https://angular.io/api/core/TemplateRef\",\n              \"name\": \"TemplateRef\"\n            }\n          }\n        ]\n      }\n      </script>\n    \n      \n      <a href=\"/api\">API</a>\n    \n      /\n      <a href=\"api/core\">@angular/core</a>\n    \n  </div>\n  <header class=\"api-header\">\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    <label class=\"api-type-label class\">class</label>\n    <h1 id=\"templateref\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/TemplateRef#templateref\"><i class=\"material-icons\">link</i></a>\n      TemplateRef\n    </h1>\n    <span class=\"version\"></span>\n  </header>\n  <div class=\"page-actions\">\n      <a href=\"api/core/TemplateRef#\"><label class=\"raised page-label\"><i class=\"material-icons\">mode_edit</i>suggest edits</label></a>\n      <a href=\"https://github.com/angular/angular/tree/6.0.0-beta.5/packages/core/src/linker/template_ref.ts#L11-L41\"><label class=\"raised page-label\"><i class=\"material-icons\">code</i>view source</label></a>\n  </div>\n\n  <div class=\"api-body\">\n    \n  <p></p>\n  \n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/TemplateRef#overview\"><i class=\"material-icons\">link</i></a>Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;C> {\n  <a class=\"code-anchor\" href=\"api/core/TemplateRef#elementRef\">get elementRef: ElementRef</a>\n  <a class=\"code-anchor\" href=\"api/core/TemplateRef#createEmbeddedView\">createEmbeddedView(context: C): EmbeddedViewRef&#x3C;C></a>\n}\n</code-example>\n\n  \n  \n\n\n\n</section>\n\n  \n  \n    \n    \n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/TemplateRef#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p translation-origin=\"off\">Represents an Embedded Template that can be used to instantiate Embedded Views.</p>\n<p translation-origin=\"off\">You can access a <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code>, in two ways. Via a directive placed on a <code>&#x3C;ng-template></code> element\n(or directive prefixed with <code>*</code>) and have the <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> for this Embedded View injected into\nthe constructor of the directive using the <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> Token. Alternatively you can query for\nthe <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> from a Component or a Directive via <a href=\"api/core/Query\"><code>Query</code></a>.</p>\n<p translation-origin=\"off\">To instantiate Embedded Views based on a Template, use <a href=\"api/core/ViewContainerRef#\">createEmbeddedView</a>, which will create the View and attach it to the View Container.</p>\n\n</section>\n\n    \n\n    \n\n    \n\n    \n<section class=\"instance-properties\">\n  <h2 id=\"properties\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/TemplateRef#properties\"><i class=\"material-icons\">link</i></a>Properties</h2>\n  <table class=\"is-full-width list-table properties-table\">\n    <thead>\n      <tr><th>Property</th><th>Type</th><th>Description</th></tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"elementRef\"></a>elementRef</td>\n        <td><label class=\"property-type-label\"><code><a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a></code></label></td>\n        <td>\n          <p translation-origin=\"off\">The location in the View where the Embedded View logically belongs to.</p>\n<p translation-origin=\"off\">The data-binding and injection contexts of Embedded Views created from this <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code>\ninherit from the contexts of this location.</p>\n<p translation-origin=\"off\">Typically new Embedded Views are attached to the View Container of this location, but in\nadvanced use-cases, the View can be attached to a different container while keeping the\ndata-binding and injection context from the original location.</p>\n\n          \n        </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n    \n\n<section class=\"instance-methods\">\n  <h2 id=\"methods\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/TemplateRef#methods\"><i class=\"material-icons\">link</i></a>Methods</h2>\n  \n    <a id=\"createEmbeddedView\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"createembeddedview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/TemplateRef#createembeddedview\"><i class=\"material-icons\">link</i></a>\n    createEmbeddedView()\n    \n  </h3></th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">createEmbeddedView(context: C): <a href=\"api/core/EmbeddedViewRef\" class=\"code-anchor\">EmbeddedViewRef</a>&#x3C;C></code-example>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>context</td>\n      <td class=\"param-description\">\n              <p translation-origin=\"off\"><code>C</code></p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n    <h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n    <p translation-origin=\"off\"><code><a href=\"api/core/EmbeddedViewRef\" class=\"code-anchor\">EmbeddedViewRef&#x3C;C></a></code></p>\n\n  \n\n  \n      </td>\n    </tr>\n  \n  </tbody>\n</table>\n\n  \n</section>\n\n\n    \n\n  \n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/common/NgForOf\n - api/common/NgIf\n - api/common/NgPluralCase\n - api/common/NgSwitchCase\n - api/common/NgSwitchDefault\n - api/common/NgTemplateOutlet\n - api/core\n - api/core/EmbeddedViewRef\n - api/core/ViewContainerRef\n - guide/structural-directives\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/ElementRef\n - api/core/EmbeddedViewRef\n - api/core/Query\n - api/core/TemplateRef#\n - api/core/TemplateRef#createEmbeddedView\n - api/core/TemplateRef#createembeddedview\n - api/core/TemplateRef#description\n - api/core/TemplateRef#elementRef\n - api/core/TemplateRef#methods\n - api/core/TemplateRef#overview\n - api/core/TemplateRef#properties\n - api/core/TemplateRef#templateref\n - api/core/ViewContainerRef#\n - https://github.com/angular/angular/tree/6.0.0-beta.5/packages/core/src/linker/template_ref.ts#L11-L41\n-->"
}