{
  "id": "api/common/http/HttpInterceptor",
  "title": "\n      HttpInterceptor\n    ",
  "contents": "\n\n<article>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          \n            {\n            \"@type\": \"ListItem\",\n            \"position\": 1,\n            \"item\": {\n              \"@id\": \"https://angular.io//api\",\n              \"name\": \"API\"\n            }\n          }\n            ,{\n            \"@type\": \"ListItem\",\n            \"position\": 2,\n            \"item\": {\n              \"@id\": \"https://angular.io/api/common/http\",\n              \"name\": \"@angular/common/http\"\n            }\n          }\n            ,{\n            \"@type\": \"ListItem\",\n            \"position\": 3,\n            \"item\": {\n              \"@id\": \"https://angular.io/api/common/http/HttpInterceptor\",\n              \"name\": \"HttpInterceptor\"\n            }\n          }\n        ]\n      }\n      </script>\n    \n      \n      <a href=\"/api\">API</a>\n    \n      /\n      <a href=\"api/common/http\">@angular/common/http</a>\n    \n  </div>\n  <header class=\"api-header\">\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    <label class=\"api-type-label interface\">interface</label>\n    <h1 id=\"httpinterceptor\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptor#httpinterceptor\"><i class=\"material-icons\">link</i></a>\n      HttpInterceptor\n    </h1>\n    <span class=\"version\"></span>\n  </header>\n  <div class=\"page-actions\">\n      <a href=\"api/common/http/HttpInterceptor#\"><label class=\"raised page-label\"><i class=\"material-icons\">mode_edit</i>suggest edits</label></a>\n      <a href=\"https://github.com/angular/angular/tree/6.0.0-beta.5/packages/common/http/src/interceptor.ts#L15-L45\"><label class=\"raised page-label\"><i class=\"material-icons\">code</i>view source</label></a>\n  </div>\n\n  <div class=\"api-body\">\n    \n  \n  \n  \n  <section class=\"interface-overview\">\n<h2 id=\"interface-overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptor#interface-overview\"><i class=\"material-icons\">link</i></a>Interface Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/common/http/HttpInterceptor\" class=\"code-anchor\">HttpInterceptor</a> {\n  <a class=\"code-anchor\" href=\"api/common/http/HttpInterceptor#intercept\">intercept(req: HttpRequest&#x3C;any>, next: HttpHandler): Observable&#x3C;HttpEvent&#x3C;any>></a>\n}\n</code-example>\n\n  \n  \n\n\n  \n  \n\n\n\n</section>\n  \n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptor#description\"><i class=\"material-icons\">link</i></a>Description</h2>\n  <p translation-origin=\"off\">Intercepts <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> and handles them.</p>\n<p translation-origin=\"off\">Most interceptors will transform the outgoing request before passing it to the\nnext interceptor in the chain, by calling <code>next.handle(transformedReq)</code>.</p>\n<p translation-origin=\"off\">In rare cases, interceptors may wish to completely handle a request themselves,\nand not delegate to the remainder of the chain. This behavior is allowed.</p>\n\n</section>\n\n  \n\n  \n\n<section class=\"instance-methods\">\n  <h2 id=\"methods\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptor#methods\"><i class=\"material-icons\">link</i></a>Methods</h2>\n  \n    <a id=\"intercept\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"intercept\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptor#intercept\"><i class=\"material-icons\">link</i></a>\n    intercept()\n    \n  </h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n        <p translation-origin=\"off\">Intercept an outgoing <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> and optionally transform it or the\nresponse.</p>\n<p translation-origin=\"off\">Typically an interceptor will transform the outgoing request before returning\n<code>next.handle(transformedReq)</code>. An interceptor may choose to transform the\nresponse event stream as well, by applying additional Rx operators on the stream\nreturned by <code>next.handle()</code>.</p>\n<p translation-origin=\"off\">More rarely, an interceptor may choose to completely handle the request itself,\nand compose a new event stream instead of invoking <code>next.handle()</code>. This is\nacceptable behavior, but keep in mind further interceptors will be skipped entirely.</p>\n<p translation-origin=\"off\">It is also rare but valid for an interceptor to return multiple responses on the\nevent stream for a single request.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">intercept(req: <a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&#x3C;any>, next: <a href=\"api/common/http/HttpHandler\" class=\"code-anchor\">HttpHandler</a>): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;any>></code-example>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>req</td>\n      <td class=\"param-description\">\n              <p translation-origin=\"off\"><code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a><any></any></code></p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>next</td>\n      <td class=\"param-description\">\n              <p translation-origin=\"off\"><code><a href=\"api/common/http/HttpHandler\" class=\"code-anchor\">HttpHandler</a></code></p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n    <h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n    <p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;any>></code></p>\n\n  \n\n  \n      </td>\n    </tr>\n  \n  </tbody>\n</table>\n\n  \n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/common/http\n - api/common/http/HTTP_INTERCEPTORS\n - api/common/http/HttpHandler\n - api/common/http/JsonpInterceptor\n - guide/http\n-->\n<!-- links from this doc:\n - /api\n - api/common/http\n - api/common/http/HttpEvent\n - api/common/http/HttpHandler\n - api/common/http/HttpInterceptor#\n - api/common/http/HttpInterceptor#description\n - api/common/http/HttpInterceptor#httpinterceptor\n - api/common/http/HttpInterceptor#intercept\n - api/common/http/HttpInterceptor#interface-overview\n - api/common/http/HttpInterceptor#methods\n - api/common/http/HttpRequest\n - https://github.com/angular/angular/tree/6.0.0-beta.5/packages/common/http/src/interceptor.ts#L15-L45\n-->"
}